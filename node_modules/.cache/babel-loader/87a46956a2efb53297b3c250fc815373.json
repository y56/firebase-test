{"ast":null,"code":"var _jsxFileName = \"/home/y56/gh/firebase-test/react-firebase-v9/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport Form from './Components/Common/Form';\nimport Home from './Components/Home';\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\nimport { app } from './firebase-config';\nimport { getAuth, signInWithEmailAndPassword, createUserWithEmailAndPassword } from 'firebase/auth';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  let navigate = useNavigate();\n\n  const handleAction = id => {\n    const authentication = getAuth();\n\n    if (id === 1) {\n      signInWithEmailAndPassword(authentication, email, password).then(response => {\n        navigate('/home');\n        sessionStorage.setItem('Auth Token', response._tokenResponse.refreshToken);\n      }).catch(error => {\n        console.log(error.code);\n\n        if (error.code === 'auth/wrong-password') {\n          toast.error('Please check the Password');\n        }\n\n        if (error.code === 'auth/user-not-found') {\n          toast.error('Please check the Email');\n        }\n      });\n    }\n\n    if (id === 2) {\n      createUserWithEmailAndPassword(authentication, email, password).then(response => {\n        navigate('/home');\n        sessionStorage.setItem('Auth Token', response._tokenResponse.refreshToken);\n      }).catch(error => {\n        if (error.code === 'auth/email-already-in-use') {\n          toast.error('Email Already in Use');\n        }\n      });\n    }\n  };\n\n  useEffect(() => {\n    let authToken = sessionStorage.getItem('Auth Token');\n\n    if (authToken) {\n      navigate('/home');\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(Form, {\n            title: \"Login\",\n            setEmail: setEmail,\n            setPassword: setPassword,\n            handleAction: () => handleAction(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/register\",\n          element: /*#__PURE__*/_jsxDEV(Form, {\n            title: \"Register\",\n            setEmail: setEmail,\n            setPassword: setPassword,\n            handleAction: () => handleAction(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/home\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"P8N6aOEN8VF4cvKL87x4xkvKyJc=\", false, function () {\n  return [useNavigate];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/y56/gh/firebase-test/react-firebase-v9/src/App.js"],"names":["useState","useEffect","Form","Home","Routes","Route","useNavigate","app","getAuth","signInWithEmailAndPassword","createUserWithEmailAndPassword","ToastContainer","toast","App","email","setEmail","password","setPassword","navigate","handleAction","id","authentication","then","response","sessionStorage","setItem","_tokenResponse","refreshToken","catch","error","console","log","code","authToken","getItem"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport './App.css';\nimport Form from './Components/Common/Form';\nimport Home from './Components/Home';\nimport {\n  Routes,\n  Route,\n  useNavigate\n} from \"react-router-dom\";\nimport { app } from './firebase-config';\nimport { getAuth, signInWithEmailAndPassword, createUserWithEmailAndPassword } from 'firebase/auth';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nfunction App() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  let navigate = useNavigate();\n  const handleAction = (id) => {\n    const authentication = getAuth();\n    if (id === 1) {\n      signInWithEmailAndPassword(authentication, email, password)\n        .then((response) => {\n          navigate('/home')\n          sessionStorage.setItem('Auth Token', response._tokenResponse.refreshToken)\n        })\n        .catch((error) => {\n          console.log(error.code)\n          if (error.code === 'auth/wrong-password') {\n            toast.error('Please check the Password');\n          }\n          if (error.code === 'auth/user-not-found') {\n            toast.error('Please check the Email');\n          }\n        })\n    }\n    if (id === 2) {\n      createUserWithEmailAndPassword(authentication, email, password)\n        .then((response) => {\n          navigate('/home')\n          sessionStorage.setItem('Auth Token', response._tokenResponse.refreshToken)\n        })\n        .catch((error) => {\n          if (error.code === 'auth/email-already-in-use') {\n            toast.error('Email Already in Use');\n          }\n        })\n    }\n  }\n\n  useEffect(() => {\n    let authToken = sessionStorage.getItem('Auth Token')\n\n    if (authToken) {\n      navigate('/home')\n    }\n  }, [])\n  return (\n    <div className=\"App\">\n      <>\n        <ToastContainer />\n        <Routes>\n          <Route\n            path='/login'\n            element={\n              <Form\n                title=\"Login\"\n                setEmail={setEmail}\n                setPassword={setPassword}\n                handleAction={() => handleAction(1)}\n              />}\n          />\n          <Route\n            path='/register'\n            element={\n              <Form\n                title=\"Register\"\n                setEmail={setEmail}\n                setPassword={setPassword}\n                handleAction={() => handleAction(2)}\n              />}\n          />\n\n          <Route\n            path='/home'\n            element={\n              <Home />}\n          />\n        </Routes>\n      </>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}