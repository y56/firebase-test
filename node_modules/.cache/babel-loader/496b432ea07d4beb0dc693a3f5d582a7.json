{"ast":null,"code":"import _slicedToArray from\"/home/y56/gh/firebase-test/react-firebase-v9/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect}from'react';import'./App.css';import Form from'./Components/Common/Form';import Home from'./Components/Home';import{Routes,Route,useNavigate}from\"react-router-dom\";import{app}from'./firebase-config';import{getAuth,signInWithEmailAndPassword,createUserWithEmailAndPassword}from'firebase/auth';import{ToastContainer,toast}from'react-toastify';import'react-toastify/dist/ReactToastify.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function App(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var navigate=useNavigate();var _handleAction=function handleAction(id){var authentication=getAuth();if(id===1){signInWithEmailAndPassword(authentication,email,password).then(function(response){navigate('/home');sessionStorage.setItem('Auth Token',response._tokenResponse.refreshToken);}).catch(function(error){console.log(error.code);if(error.code==='auth/wrong-password'){toast.error('Please check the Password');}if(error.code==='auth/user-not-found'){toast.error('Please check the Email');}});}if(id===2){createUserWithEmailAndPassword(authentication,email,password).then(function(response){navigate('/home');sessionStorage.setItem('Auth Token',response._tokenResponse.refreshToken);}).catch(function(error){if(error.code==='auth/email-already-in-use'){toast.error('Email Already in Use');}});}};useEffect(function(){var authToken=sessionStorage.getItem('Auth Token');if(authToken){navigate('/home');}},[]);return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ToastContainer,{}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/login\",element:/*#__PURE__*/_jsx(Form,{title:\"Login\",setEmail:setEmail,setPassword:setPassword,handleAction:function handleAction(){return _handleAction(1);}})}),/*#__PURE__*/_jsx(Route,{path:\"/register\",element:/*#__PURE__*/_jsx(Form,{title:\"Register\",setEmail:setEmail,setPassword:setPassword,handleAction:function handleAction(){return _handleAction(2);}})}),/*#__PURE__*/_jsx(Route,{path:\"/home\",element:/*#__PURE__*/_jsx(Home,{})})]})]})});}export default App;","map":{"version":3,"sources":["/home/y56/gh/firebase-test/react-firebase-v9/src/App.js"],"names":["useState","useEffect","Form","Home","Routes","Route","useNavigate","app","getAuth","signInWithEmailAndPassword","createUserWithEmailAndPassword","ToastContainer","toast","App","email","setEmail","password","setPassword","navigate","handleAction","id","authentication","then","response","sessionStorage","setItem","_tokenResponse","refreshToken","catch","error","console","log","code","authToken","getItem"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport './App.css';\nimport Form from './Components/Common/Form';\nimport Home from './Components/Home';\nimport {\n  Routes,\n  Route,\n  useNavigate\n} from \"react-router-dom\";\nimport { app } from './firebase-config';\nimport { getAuth, signInWithEmailAndPassword, createUserWithEmailAndPassword } from 'firebase/auth';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nfunction App() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  let navigate = useNavigate();\n  const handleAction = (id) => {\n    const authentication = getAuth();\n    if (id === 1) {\n      signInWithEmailAndPassword(authentication, email, password)\n        .then((response) => {\n          navigate('/home')\n          sessionStorage.setItem('Auth Token', response._tokenResponse.refreshToken)\n        })\n        .catch((error) => {\n          console.log(error.code)\n          if (error.code === 'auth/wrong-password') {\n            toast.error('Please check the Password');\n          }\n          if (error.code === 'auth/user-not-found') {\n            toast.error('Please check the Email');\n          }\n        })\n    }\n    if (id === 2) {\n      createUserWithEmailAndPassword(authentication, email, password)\n        .then((response) => {\n          navigate('/home')\n          sessionStorage.setItem('Auth Token', response._tokenResponse.refreshToken)\n        })\n        .catch((error) => {\n          if (error.code === 'auth/email-already-in-use') {\n            toast.error('Email Already in Use');\n          }\n        })\n    }\n  }\n\n  useEffect(() => {\n    let authToken = sessionStorage.getItem('Auth Token')\n\n    if (authToken) {\n      navigate('/home')\n    }\n  }, [])\n  return (\n    <div className=\"App\">\n      <>\n        <ToastContainer />\n        <Routes>\n          <Route\n            path='/login'\n            element={\n              <Form\n                title=\"Login\"\n                setEmail={setEmail}\n                setPassword={setPassword}\n                handleAction={() => handleAction(1)}\n              />}\n          />\n          <Route\n            path='/register'\n            element={\n              <Form\n                title=\"Register\"\n                setEmail={setEmail}\n                setPassword={setPassword}\n                handleAction={() => handleAction(2)}\n              />}\n          />\n\n          <Route\n            path='/home'\n            element={\n              <Home />}\n          />\n        </Routes>\n      </>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}